#include<iostream>
#include<algorithm>
#include<string>
#include<cstring>
using namespace std;
bool compare1(string a,string b)
{
	int l1=a.length();
	int l2=b.length();
	return l1<l2;
}
struct trie
{
	int ok;
	trie *next[10];
};
trie tree[1000000];
trie root;
int total,flag;
void creat()
{
	root.ok=0;
	total=0;
	flag=0;
	memset(root.next,0,sizeof(root.next));
}
void creattree(string s)
{
	int l=s.length();
	trie *p=&root;
	for(int i=0;i<l;i++)
	{
		int id=s[i]-'0';
		//cout<<id<<endl;
		if(p->next[id]==0)
		{
			tree[total].ok=0;
			memset(tree[total].next,0,sizeof(tree[total].next));
			p->next[id]=&tree[total++];
		}
		p=p->next[id];
		if(p->ok>0) flag=1;
		//cout<<p->ok<<endl;
	}
	p->ok++;
}

int main()
{
	int t;
	cin>>t;
	for(;t>0;t--)
	{
		int n;
		cin>>n;
		string a[10001];
		creat();
		for(int i=0;i<n;i++)
		{
			cin>>a[i];
		}
		sort(a,a+n,compare1);
		for(int i=0;i<n;i++)
		{
			//cout<<a[i]<<endl;
			creattree(a[i]);
		}
		if(flag==0)
		cout<<"YES"<<endl;
		else cout<<"NO"<<endl;
	} 
}
